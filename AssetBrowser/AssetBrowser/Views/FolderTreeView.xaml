<UserControl x:Class="AssetBrowser.Views.FolderTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AssetBrowser.Views"
             xmlns:vm="clr-namespace:AssetBrowser.ViewModels"
             xmlns:c="clr-namespace:AssetBrowser.Converter"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" >
    <UserControl.DataContext>
        <vm:FolderTreeViewModel x:Name="_FolderTreeVM"/>
    </UserControl.DataContext>
    
   
    <UserControl.Resources>
        <!--色-->
        <SolidColorBrush x:Key="GlyphBrush" Color="White" />
        <SolidColorBrush x:Key="SelectedColor" Color="#FF394750" />
        <SolidColorBrush x:Key="Background" Color="#FF282828"/>
        
        <!--アイコン-->
        <ImageBrush x:Key= "FolderIcon" ImageSource= "/AssetBrowser;component/resources/Folder_10.png"/>
        <ImageBrush x:Key= "CheckIcon" ImageSource= "/AssetBrowser;component/resources/CheckMark_16.png"/>
        <ImageBrush x:Key= "PencilIcon" ImageSource= "/AssetBrowser;component/resources/Material01_16.png"/>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="13" Background="Transparent">
                            <Path x:Name="ExpandPath" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,1,1,1" Fill="{StaticResource GlyphBrush}"  Data="M 4 0 L 8 4 L 4 8 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2" Opacity="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="Red" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Background" Value="#0a99f3" />
                </Trigger>
            </Style.Triggers>

            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Name="Bd" Background="{StaticResource Background}" BorderThickness="1" BorderBrush="Black">
                            <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="5,4,5,4"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource SelectedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>

            </Setter>
        </Style>

        <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="WhiteSmoke" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Bd" Padding="17,0,17,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_38">
                            <ContentPresenter x:Name="ContentPresenter"  Content="{TemplateBinding Header}" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_33"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource SelectedColor}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource SelectedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ItemTreeView" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded,Mode=TwoWay}"/>
            <Setter Property="IsSelected" Value="{Binding Path=IsSelected,Mode=TwoWay}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>
                            <c:LeftMarginMultiplierConverter Length="25" x:Key="lengthConverter" />
                        </ControlTemplate.Resources>
                        <Grid>
                            <StackPanel>
                                <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                    <Grid Margin="{Binding Converter={StaticResource lengthConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="10" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded}" ClickMode="Press"/>
                                        <ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header" />
                                    </Grid>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" />
                            </StackPanel>
                            <Grid.ContextMenu>
                                <ContextMenu Background="{StaticResource Background}" Foreground="White">
                                    <MenuItem Header="Alias" Command="{Binding OpenAliasWindowCommand}" Style="{StaticResource MenuItemStyle}"/>
                                </ContextMenu>
                            </Grid.ContextMenu>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>

                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource SelectedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </UserControl.Resources>
    <Grid>
        <TreeView
            x:Name="FolderTree"
            AutomationProperties.IsRowHeader="True"
            BorderBrush="{x:Null}"
            ItemsSource="{Binding Items}"
            Background="{StaticResource Background}"
            AllowDrop="True"
            >
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type vm:TreeFolderItemViewModel}" ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <Rectangle Width="10" Height= "10" Margin= "3" >
                            <Rectangle.Style>
                                <Style TargetType="Rectangle">
                                    <Setter Property="Fill" Value="{StaticResource FolderIcon}"/>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                        <TextBlock Text="{Binding Name}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsUseAlias}" Value="True">
                                            <Setter Property="Foreground" Value="{StaticResource AliasFontColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsDeleted}" Value="True">
                                            <Setter Property="Foreground" Value="{StaticResource DeletedFolderColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>

                <HierarchicalDataTemplate DataType="{x:Type vm:TreeAssetItemViewModel}" ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <Rectangle Width="10" Height= "10" Margin= "3" >
                            <Rectangle.Style>
                                <Style TargetType="Rectangle">
                                    <Setter Property="Fill" Value="{StaticResource CheckIcon}"/>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                        <TextBlock Text="{Binding Name}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsUseAlias}" Value="True">
                                            <Setter Property="Foreground" Value="{StaticResource AliasFontColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsDeleted}" Value="True">
                                            <Setter Property="Foreground" Value="{StaticResource DeletedFolderColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.Resources>

            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem" BasedOn="{StaticResource ItemTreeView}">
                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                </Style>
            </TreeView.ItemContainerStyle>
            
        </TreeView>
    </Grid>
</UserControl>
